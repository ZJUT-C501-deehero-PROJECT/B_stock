<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEACADECAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAA
        AAD///8A////AP///wD///8A////AP///wD46NEA679+AOq7dgD14MIA//38AP779gD027cA46ZMAN6Y
        MADely4A4aFCAO/NmwD89u0A/vz5APnr1gDmsGAA46ZMAPTbtwD9+fMA//37AO/NmgDjpUoA4J07AOq9
        ewD78+cA/v37APTdugDkqVIA4aBAAPDQoQD89+8A7caMAOCfPgDfmTIA6LhwAPru3AD9+PIA89q1AOCe
        OwDuypMA+/PnAPvy5ADns2YA4Jw4AN+ZMQDlrVsA9+bNAPDPnwDgnTkA3pgvAOq9egD++/cA4Jw3AOOn
        TQDmrl0A+vDgAPTduwD1374A6bp0APflywDz2rQA7sqUAPru3AD46tQA67+AAOKkSQD03LkA78uXAOOo
        UQDx06cA/PbuAPz06gDtxYsA46ZNAOKlSgDmsWIA5q9eAOKjRQDfmzYA5a9eAOGhQQDemDAA8NGiAPv0
        6QDsw4cA4qRHAOzBgwDvzZoA/PbsAOzChADsxIkA68GCAPjo0QDmr18A4aA/AOaxYgD359AA/vz6APrw
        4QD35csA+/LmAP79+wAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAgMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwQBBQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQEFBQVnaGlpaWlpaWlpaWlpaWlpaWlpaWlpamsFBQUFAQUFBWJjZGRkZGRkZGRkZGRk
        ZGRkZGRkZGRlZgUFBQUBBQUFYA8PDw8PDw8PDw8PDw8PDw8PDw8PDw9hBQUFBQEFBQVADw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PD0AFBQUFAQUFBUAPD10FBQVeD18FBQUFFkYFBQUFFg8PQAUFBQUBBQUFQA8PSAUF
        BQUPSQUFBQVKSQUFBQVKDw9ABQUFBQEFBQVADw9IBQUFBQ9JBQUFBUpJBQUFBUoPD0AFBQUFAQUFBUAP
        D0gFBQUFD0kFBQUFSkkFBQUFSg8PQAUFBQUBBQUFQA8PWExMTFkPWkxMTExbXExMTExbDw9ABQUFBQEF
        BQVADw9TUVFRVQ9WUVFRUVcmUVFRUVcPD0AFBQUFAQUFBUAPD1BRUVFSD1NRUVFRVA8PDw8PDw8PQAUF
        BQUBBQUFQA8PS0xMTE0PTkxMTExPDw8PDw8PDw9ABQUFBQEFBQVADw9IBQUFBQ9JBQUFBUoPDw8PDw8P
        D0AFBQUFAQUFBUAPD0gFBQUFD0kFBQUFSg8PDw8PDw8PQAUFBQUBBQUFQA8PSAUFBQUPSQUFBQVKDw8P
        Dw8PDw9ABQUFBQEFBQVADw9DRERERQ9GREREREcPDw8PDw8PD0AFBQUFAQUFBUAPDw8PDw8PDw8PDw8P
        Dw8PDw8PDw8PQAUFBQUBBT4/QA8PDw8PDw8PDw8PDw8PDw8PDw8PDw9AQUIFBQEFOg87Dw8PDw8PDw8P
        Dw8PDw8PDw8PDw8PDzwPDz0FAQU1Ng8PDw8PDw8PDw8PDw8PDw8PDw8PDw8PDzc4OQUBBQUvMDEPDw8P
        Dw8PDw8PDw8PDw8PDw8PDzIzNAUFBQEFBQUqKywPDw8PDw8PDw8PDw8PDw8PDw8PLS4FBQUFAQUFBQUF
        EiUmDw8PDw8PDw8PDw8PDw8nKCkFBQUFBQUBBQUFBQUFHyAhDw8PDw8PDw8PDw8PIiMkBQUFBQUFBQEF
        BQUFBQUFBRkaGw8PDw8PDw8PHB0eBQUFBQUFBQUFAQUFBQUFBQUFBRMUFQ8PDw8PDxYXGAUFBQUFBQUF
        BQUBBQUFBQUFBQUFBQULDA0ODxAREgUFBQUFBQUFBQUFBQEFBQUFBQUFBQUFBQUFBgcICQoFBQUFBQUF
        BQUFBQUFAQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUABQUFBQUFBQUFBQUFBQUFBQUFBQUF
        BQUFBQUFBQUFBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==
</value>
  </data>
</root>